create database courier_management;
use courier_management;

CREATE TABLE User (
    UserID INT PRIMARY KEY,
    Name VARCHAR(255),
    Email VARCHAR(255) ,
    Password VARCHAR(255),
    ContactNumber VARCHAR(20),
    Address varchar(255));

CREATE TABLE Courier (
    CourierID INT PRIMARY KEY,
    SenderName VARCHAR(255),
    SenderAddress varchar(255),
    ReceiverName VARCHAR(255),
    ReceiverAddress varchar(255),
    Weight Double,
    Status VARCHAR(50),
    TrackingNumber VARCHAR(20) ,
    DeliveryDate DATE);

CREATE TABLE CourierServices (
    ServiceID INT PRIMARY KEY,
    ServiceName VARCHAR(100),
    Cost double);

CREATE TABLE Employee (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(255),
    Email VARCHAR(255) ,
    ContactNumber VARCHAR(20),
    Role VARCHAR(50),
    Salary double);

CREATE TABLE Location (
    LocationID INT PRIMARY KEY,
    LocationName VARCHAR(100),
    Address Double);

CREATE TABLE Payment (
    PaymentID INT PRIMARY KEY,
    CourierID INT,
    LocationID INT,
    Amount Double,
    PaymentDate DATE,
    FOREIGN KEY (CourierID) REFERENCES Courier(CourierID),
    FOREIGN KEY (LocationID) REFERENCES Location(LocationID)
);


INSERT INTO User (UserID, Name, Email, Password, ContactNumber, Address) VALUES
(1, 'John Doe', 'john.doe@example.com', 'password123', '1234567890', '123 Main St, City, Country'),
(2, 'Jane Smith', 'jane.smith@example.com', 'pass456', '0987654321', '456 Elm St, Town, Country'),
(3, 'Alice Johnson', 'alice.johnson@example.com', 'alicepass', '9876543210', '789 Oak St, Village, Country');

INSERT INTO Courier (CourierID, SenderName, SenderAddress, ReceiverName, ReceiverAddress, Weight, Status, TrackingNumber, DeliveryDate) VALUES
(1, 'John Doe', '123 Main St, City, Country', 'Jane Smith', '456 Elm St, Town, Country', 2.5, 'In Transit', 'TRACK123', '2024-03-10'),
(2, 'Alice Johnson', '789 Oak St, Village, Country', 'Bob Brown', '101 Pine St, Suburb, Country', 1.8, 'Delivered', 'TRACK456', '2024-03-05'),
(3, 'Ella Davis', '555 Maple St, Hamlet, Country', 'David Wilson', '777 Birch St, Countryside, Country', 3.2, 'In Transit', 'TRACK789', '2024-03-08');

INSERT INTO CourierServices (ServiceID, ServiceName, Cost) VALUES
(1, 'Standard Delivery', 10.00),
(2, 'Express Delivery', 20.00),
(3, 'Same-Day Delivery', 30.00);

INSERT INTO Employee (EmployeeID, Name, Email, ContactNumber, Role, Salary) VALUES
(1, 'Michael Johnson', 'michael.j@example.com', '123-456-7890', 'Delivery Driver', 3000.00),
(2, 'Emily Brown', 'emily.b@example.com', '987-654-3210', 'Customer Service Representative', 2500.00),
(3, 'William Smith', 'william.s@example.com', '555-555-5555', 'Manager', 5000.00);

INSERT INTO Location (LocationID, LocationName, Address) VALUES
(1, 'Main Office', '1000 Corporate Blvd, City, Country'),
(2, 'Warehouse', '2000 Industrial Pkwy, Town, Country'),
(3, 'Branch Office', '3000 Business Center Dr, Suburb, Country');

INSERT INTO Payment (PaymentID, CourierID, LocationID, Amount, PaymentDate) VALUES
(1, 1, 2, 15.00, '2024-03-07'),
(2, 2, 1, 20.00, '2024-03-05'),
(3, 3, 3, 25.00, '2024-03-10');

/*-----Queries----------*/
#TASK-2

#List all customers:
SELECT * FROM User;

#List all orders for a specific customer:
SELECT * FROM Courier WHERE SenderName = 'John Doe';

#List all couriers:
SELECT * FROM Courier;

#List all deliveries for a specific courier:
SELECT * FROM Courier WHERE CourierID = 1;

#List all undelivered packages:
SELECT * FROM Courier WHERE Status = 'In Transit';

#List all packages that are scheduled for delivery today:
SELECT * FROM Courier WHERE DeliveryDate = CURDATE();

#List all packages with a specific status:
SELECT * FROM Courier WHERE Status = 'Delivered';

#Calculate the total number of packages for each courier:
SELECT CourierID, COUNT(*) AS TotalPackages 
FROM Courier 
GROUP BY CourierID;

#Find the average delivery time for each courier:
SELECT CourierID, AVG(DATEDIFF(DeliveryDate, OrderDate)) AS AvgDeliveryTime 
FROM Courier 
GROUP BY CourierID;

#List all packages with a specific weight range:
SELECT * FROM Courier WHERE Weight BETWEEN 2 AND 3.0;

#Retrieve employees whose names contain 'John':
SELECT * FROM Employee WHERE Name LIKE '%John%';

#Retrieve all courier records with payments greater than $50:
SELECT c.* 
FROM Courier c
JOIN Payment p ON c.CourierID = p.CourierID 
WHERE p.Amount > 50;

##-------Task-3-------##

#Find the total number of couriers handled by each employee:
SELECT e.EmployeeID, e.Name, COUNT(c.CourierID) AS TotalCouriersHandled
FROM Employee e
LEFT JOIN Courier c ON e.EmployeeID = c.EmployeeID
GROUP BY e.EmployeeID, e.Name;

#Calculate the total revenue generated by each location:
SELECT LocationID, LocationName, SUM(Amount) AS TotalRevenue
FROM Payment
GROUP BY LocationID, LocationName;

#Find the total number of couriers delivered to each location:
SELECT DeliveryLocationID, COUNT(CourierID) AS TotalCouriersDelivered
FROM Courier
GROUP BY DeliveryLocationID;

#Find the courier with the highest average delivery time:
SELECT CourierID, AVG(DATEDIFF(DeliveryDate, OrderDate)) AS AvgDeliveryTime
FROM Courier
GROUP BY CourierID
ORDER BY AvgDeliveryTime DESC
LIMIT 1;

#Find Locations with Total Payments Less Than a Certain Amount:
SELECT LocationID, LocationName, SUM(Amount) AS TotalPayment
FROM Payment
GROUP BY LocationID, LocationName
HAVING TotalPayment < 100;

#Calculate Total Payments per Location:
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS TotalPayment
FROM Location l
LEFT JOIN Payment p ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName;

#Retrieve couriers who have received payments totaling more than $1000 in a specific location (LocationID = X):
SELECT CourierID, SenderName, ReceiverName, SUM(Amount) AS TotalPayment
FROM Courier
JOIN Payment USING (CourierID)
WHERE LocationID = 2
HAVING TotalPayment > 1000;

#Retrieve couriers who have received payments totaling more than $1000 after a certain date (PaymentDate > 'YYYY-MM-DD'):
SELECT c.CourierID, c.SenderName, c.ReceiverName, SUM(p.Amount) AS TotalPayment
FROM Courier c
JOIN Payment p ON c.CourierID = p.CourierID
WHERE p.PaymentDate > '2024-03-05'
GROUP BY c.CourierID, c.SenderName, c.ReceiverName
HAVING TotalPayment > 1000;

#Retrieve locations where the total amount received is more than $5000 before a certain date (PaymentDate > 'YYYY-MM-DD'):
SELECT CourierID, SenderName, ReceiverName, SUM(Amount) AS TotalPayment
FROM Courier
JOIN Payment USING (CourierID)
WHERE PaymentDate > '2024-03-05'
GROUP BY CourierID, SenderName, ReceiverName
HAVING TotalPayment > 1000;

##-------TASK-4-----##

#Retrieve Payments with Courier Information:
SELECT p.*, c.*
FROM Payment p
INNER JOIN Courier c ON p.CourierID = c.CourierID;

#Retrieve Payments with Location Information:
SELECT p.*, l.*
FROM Payment p
INNER JOIN Location l ON p.LocationID = l.LocationID;

#Retrieve Payments with Courier and Location Information:

SELECT p.*, c.*, l.*
FROM Payment p
INNER JOIN Courier c ON p.CourierID = c.CourierID
INNER JOIN Location l ON p.LocationID = l.LocationID;

#List all payments with courier details:
SELECT p.*, c.*
FROM Payment p
LEFT JOIN Courier c ON p.CourierID = c.CourierID;

#Total payments received for each courier:
SELECT c.CourierID, c.SenderName, c.ReceiverName, SUM(p.Amount) AS TotalPayment
FROM Courier c
LEFT JOIN Payment p ON c.CourierID = p.CourierID
GROUP BY c.CourierID, c.SenderName, c.ReceiverName;

#List payments made on a specific date:
SELECT *
FROM Payment
WHERE PaymentDate = '2024-03-05';
